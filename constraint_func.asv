function [c, ceq] = constraint_func(x)
    sim_time = x(1);
    NUM = 50;
    delta_time = sim_time/NUM;
    % state vector x = [lon; lat; alt; vel; fpa; azi]
    lons = x(2      : 1 + NUM);
    lats = x(2 + NUM*1: 1 + NUM*2);
    alts = x(2 + NUM*2: 1 + NUM*3);
    vels = x(2 + NUM*3: 1 + NUM*4);
    fpas = x(2 + NUM*4: 1 + NUM*5);
    azis = x(2 + NUM*5: 1 + NUM*6);
    bnks = x(2 + NUM*6: 1 + NUM*7);
    
    c = [];
    ceq = [];
    bnk_lim = 0.0872665;
    ang_tol = 0.0174533;
    tar_lat = 0.5894954268;
    tar_lon = -1.472993311;
    j = 1;
    for i = 1:length(lons)-1
        x_i = [lons(i); lats(i); alts(i); vels(i); fpas(i); azis(i); bnks(i)];
        x_n = [lons(i+1); lats(i+1); alts(i+1); vels(i+1); fpas(i+1); azis(i+1); bnks(i+1)];

        xdot_i = edl_ode(x_i);
        xdot_n = edl_ode(x_n);
    
        xend = x_i(1:end-1) + delta_time*(xdot_n+xdot_i)/2;
        ceq = [ceq; x_n(1:end-1) - xend];
        if j<50
            c = [c; abs(bnks(j+1)-bnks(j))-bnk_lim];
        end
        j = j+1;
    end
%     c = [c; abs(tar_lon-lons(end))-ang_tol; abs(tar_lat-lats(end))-ang_tol];
    c = [c; abs(tar_alt-lats(end))-alt_tol];

end